{"version":3,"sources":["Checkbox.js","Header.js","Footer.js","App.js","index.js"],"names":["Checkbox","props","className","type","checked","item","completed","onChange","handleChange","id","style","fontStyle","color","text","Header","wish","date","Date","hours","getHours","dateday","getDate","datemonth","getMonth","dateyear","getFullYear","getMinutes","getSeconds","Footer","state","time","timmin","timesec","Component","App","todo","bind","handleadd","this","setState","prevState","map","name","prompt","length","console","log","mappeddata","onClick","ReactDOM","render","document","getElementById"],"mappings":"8RAmBeA,MAjBf,SAAkBC,GAMhB,OACI,sBAAKC,UAAU,WAAf,UACA,uBACAC,KAAK,WACLC,QAASH,EAAMI,KAAKC,UACpBC,SAAU,kBAAKN,EAAMO,aAAaP,EAAMI,KAAKI,OACjD,oBAAIC,MAAOT,EAAMI,KAAKC,UAXD,CACnBK,UAAW,SACXC,MAAO,WASqC,KAA9C,SAAqDX,EAAMI,KAAKQ,W,MCoBnDC,MA/Bf,WACE,IAQIC,EAREC,EAAM,IAAIC,KACVC,EAAQF,EAAKG,WACZC,EAASJ,EAAKK,UACfC,EAAUN,EAAKO,WACfC,EAASR,EAAKS,cAapB,OAZYT,EAAKG,WACHH,EAAKU,aACLV,EAAKW,aAGjBZ,EADCG,EAAM,GACD,UAECA,GAAO,GAAGA,EAAM,GACf,YAEH,UAGL,gCACA,qBAAKhB,UAAU,SAAf,SACE,6CAGF,qBAAKA,UAAU,SAAf,SACF,+BAAKkB,EAAL,MAAiBE,EAAjB,MAA+BE,EAA/B,SAA+CT,EAA/C,aCLaa,G,wDAnBb,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IACD4B,MAAQ,GAFI,E,qDAMjB,IAAMb,EAAO,IAAIC,KACXa,EAAOd,EAAKG,WACZY,EAAOf,EAAKU,aACZM,EAAQhB,EAAKW,aACnB,OACA,sBAAKzB,UAAU,SAAf,UACE,mDACF,qCAAQ,KAAM4B,EAAd,MAAuBC,EAAvB,MAAkCC,Y,GAdjBC,cC6DNC,E,kDAxDb,WAAYjC,GAAQ,IAAD,8BACjB,cAAMA,IACD4B,MAAQ,CACTM,KAAO,IAEX,EAAK3B,aAAe,EAAKA,aAAa4B,KAAlB,gBACpB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBANA,E,yDAQN3B,GACX6B,KAAKC,UAAS,SAAAC,GAOZ,MAAM,CACJL,KAPWK,EAAUL,KAAKM,KAAI,SAAAN,GAI9B,OAHGA,EAAK1B,KAAKA,IACX0B,EAAK7B,WAAW6B,EAAK7B,WAEhB6B,W,kCAQX,IAAMO,EAAKC,OAAO,kCAClBL,KAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BL,KAAK,GAAD,mBACGK,EAAUL,MADb,CAEA,CAAC1B,GAAG+B,EAAUL,KAAKS,OAAO,EAAE/B,KAAK6B,EAAKpC,WAAU,SAGtDuC,QAAQC,IAAI,a,+BAIJ,IAAD,OACDC,EAAaT,KAAKT,MAAMM,KAAKM,KAAI,SAAApC,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,EAAMG,aAAc,EAAKA,cAAxCH,EAAKI,OAErE,OACE,sBAAKP,UAAU,MAAf,UACE,cAAC,EAAD,IACA,wBAAQ8C,QAAS,WAAK,EAAKX,aAAcnC,UAAU,QAAnD,wBAIA,qBAAKA,UAAU,WAAf,SAEE6C,IAEF,cAAC,EAAD,W,GAhDYd,aCHlBgB,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.e33b56e6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Checkbox(props) {\r\n  const completeStyle ={\r\n    fontStyle :\"italic\",\r\n    color: \"#cdcdcd\",\r\n  }\r\n\r\n  return (\r\n      <div className=\"todoItem\">\r\n      <input \r\n      type=\"checkbox\" \r\n      checked={props.item.completed}\r\n      onChange={()=> props.handleChange(props.item.id)}  />\r\n  <h1 style={props.item.completed?completeStyle:null}>{props.item.text}</h1>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Checkbox\r\n","import React from 'react'\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n  const date =new Date();\r\n  const hours = date.getHours();\r\n  const  dateday= date.getDate();\r\n  const datemonth=date.getMonth();\r\n  const dateyear=date.getFullYear();\r\n  const time= date.getHours();\r\n  const timemin=date.getMinutes();\r\n  const timesec=date.getSeconds();\r\n  let wish\r\n  if(hours<12){\r\n    wish= \"morning\"\r\n  }\r\n  else {if(hours>=12&hours<17)\r\n    {wish = \"afternoon\"}\r\n  else\r\n  {wish =\" night \"}\r\n  }\r\n  return (\r\n    <div>\r\n    <div className='header'>\r\n      <h1>Todo List</h1>\r\n      \r\n    </div>\r\n    <div className='header'>\r\n  <h2>{dateday} / {datemonth} / {dateyear} good {wish} </h2>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react';\r\nimport './Footer.css'\r\n\r\nclass Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  }\r\n\r\n  }\r\n  render() {\r\n    const date = new Date();\r\n    const time = date.getHours();\r\n    const timmin=date.getMinutes();\r\n    const timesec=date.getSeconds();\r\n    return (   \r\n    <div className='footer'>\r\n      <h1> Have a nice day </h1>\r\n    <h1>   {\"\\t\"}{time} : {timmin} : {timesec}</h1>\r\n    </div>\r\n     );\r\n  }\r\n}\r\n \r\nexport default Footer;","import './App.css';\nimport Checkbox from './Checkbox';\nimport Header from './Header';\nimport Footer from './Footer';\nimport data from './data';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        todo : [],\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleadd = this.handleadd.bind(this)\n  }\n  handleChange(id){\n    this.setState(prevState=>{\n      const uptodo=prevState.todo.map(todo =>{\n        if(todo.id===id){\n          todo.completed=!todo.completed\n        }\n        return todo\n      })\n      return{\n        todo:uptodo\n      }\n    })\n  }\n  handleadd(){\n    const name=prompt(\"enter the name of the activity\");\n    this.setState(prevState => ({\n      todo: [\n          ...prevState.todo, \n          {id:prevState.todo.length+1,text:name,completed:false}\n      ]\n  }))\n    console.log(\"wokring\")\n  }\n  \n  \n  render() { \n    const mappeddata = this.state.todo.map(item => <Checkbox key={item.id} item={item} handleChange={this.handleChange}/>)\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <button onClick={()=>{this.handleadd()}} className='toadd'  >\n          Add New Do\n        </button>\n\n      <div className='todoList'>\n        \n       {mappeddata}\n      </div>\n      <Footer />\n      \n      \n    </div>\n  );\n\n  }\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}